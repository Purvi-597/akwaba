<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\Http\Model\Categories;
use App\Http\Model\Subcategories;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class SearchApi extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {

        if ($request->cat_id) {
            $id = $request->cat_id;
            $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
            if ($request->subcatid) {

                if ($request->facilities) {
                    $subcatid = $request->subcatid;
                    $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();

                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            if ($row['id'] == $subcatid) {
                                $fieldArr = explode("-", $row['name']);
                                $fieldName = $fieldArr[0];
                                $valuesarr[] = $fieldArr[1];
                            }
                        }
                        $values = implode("','", $valuesarr);
                        $filter = $request->facilities;

                        if ($request->cusion) {

                            if ($request->sort == 1) {
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion'  and name != ''
                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                                // $osmid = 123;
                                // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            } elseif ($request->sort == 2) {
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and name != ''
                            order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                                // $osmid = 123;
                                // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            } else {
                                $cusion = $request->cusion;
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                                tags->'opening_hours' as opening_hours,  
                                tags->'cuisine' as cuisine,  
                                tags->'website' as website,  
                                tags->'addr:city' as city,  
                                tags->'addr:street' as street,
                                tags->'internet_access' as internet_access,
                                tags->'outdoor_seating' as outdoor_seating,
                                tags->'internet_access:fee' as internet_access_fee,
                                tags->'description' as description,
                                tags->'smoking' as smoking,
                                tags->'delivery' as delivery,
                                tags->'email' as email,
                                tags->'cuisine:ja' as cuisine_ja,
                                tags->'name:az' as az_name,
                                tags->'addr:postcode' as postcode,
                                tags->'facebook' as facebook,
                                tags->'addr:country' as country,
                                tags->'addr:district' as district,
                                tags->'contact:phone' as contact_phone,
                                tags->'contact:instagram' as instagram,
                                tags->'operator' as operator,
                                tags->'diet:vegetarian' as vegetarian,
                                tags->'name:ar' as ar_name,
                                tags->'townhall:type' as townhall,
                                tags->'designation' as designation,
                                tags->'name:es' as es_name,
                                tags->'capacity' as capacity,
                                tags->'name:tr' as tr_name,
                                tags->'contact:facebook' as contact_facebook,
                                tags->'reservation' as reservation,
                                tags->'instagram' as instagram,
                                tags->'takeaway' as takeaway,
                                tags->'url' as url,
                                tags->'level' as level,
                                tags->'toilets' as toilets,
                                tags->'cuisine_1' as cuisine_1,
                                tags->'cuisine_2' as cuisine_2,
                                tags->'brand' as brand,
                                tags->'contact:email' as contact_email,
                                tags->'brand:wikidata' as wikidata,
                                tags->'brand:wikipedia' as wikipedia,
                                tags->'drive_in' as drive_in,
                                tags->'wheelchair' as wheelchair,
                                tags->'microbrewery' as microbrewery,
                                tags->'opening_hours:covid19' as opening_hours_covid19,
                                tags->'diet:vegan' as diet_vegan,
                                tags->'image' as image,
                                tags->'diet:meat' as meat,
                                tags->'ref:vatin' as vatin,
                                tags->'phone_1' as phone_1,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$cusion' and name != ''
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            }
                        } else {
                            if ($request->sort == 1) {
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and name != ''
                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                                // $osmid = 123;
                                // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            } elseif ($request->sort == 2) {
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and name != ''
                            order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                                // $osmid = 123;
                                // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            } else {
                                $nearby = DB::connection('pgsql')->select("SELECT *,
                                tags->'opening_hours' as opening_hours,  
                                tags->'cuisine' as cuisine,  
                                tags->'website' as website,  
                                tags->'addr:city' as city,  
                                tags->'addr:street' as street,
                                tags->'internet_access' as internet_access,
                                tags->'outdoor_seating' as outdoor_seating,
                                tags->'internet_access:fee' as internet_access_fee,
                                tags->'description' as description,
                                tags->'smoking' as smoking,
                                tags->'delivery' as delivery,
                                tags->'email' as email,
                                tags->'cuisine:ja' as cuisine_ja,
                                tags->'name:az' as az_name,
                                tags->'addr:postcode' as postcode,
                                tags->'facebook' as facebook,
                                tags->'addr:country' as country,
                                tags->'addr:district' as district,
                                tags->'contact:phone' as contact_phone,
                                tags->'contact:instagram' as instagram,
                                tags->'operator' as operator,
                                tags->'diet:vegetarian' as vegetarian,
                                tags->'name:ar' as ar_name,
                                tags->'townhall:type' as townhall,
                                tags->'designation' as designation,
                                tags->'name:es' as es_name,
                                tags->'capacity' as capacity,
                                tags->'name:tr' as tr_name,
                                tags->'contact:facebook' as contact_facebook,
                                tags->'reservation' as reservation,
                                tags->'instagram' as instagram,
                                tags->'takeaway' as takeaway,
                                tags->'url' as url,
                                tags->'level' as level,
                                tags->'toilets' as toilets,
                                tags->'cuisine_1' as cuisine_1,
                                tags->'cuisine_2' as cuisine_2,
                                tags->'brand' as brand,
                                tags->'contact:email' as contact_email,
                                tags->'brand:wikidata' as wikidata,
                                tags->'brand:wikipedia' as wikipedia,
                                tags->'drive_in' as drive_in,
                                tags->'wheelchair' as wheelchair,
                                tags->'microbrewery' as microbrewery,
                                tags->'opening_hours:covid19' as opening_hours_covid19,
                                tags->'diet:vegan' as diet_vegan,
                                tags->'image' as image,
                                tags->'diet:meat' as meat,
                                tags->'ref:vatin' as vatin,
                                tags->'phone_1' as phone_1,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and name != ''
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");

                                // $osmid = 123;
                                // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                return response()
                                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                            }
                        }
                    }
                } else {
                    $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                    $subcatid = $request->subcatid;
                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            if ($row['id'] == $subcatid) {
                                $fieldArr = explode("-", $row['name']);
                                $fieldName = $fieldArr[0];
                                $valuesarr[] = $fieldArr[1];
                            }
                        }
                        $values = implode("','", $valuesarr);

                        if ($request->sort == 1) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''
                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } elseif ($request->sort == 2) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''
                            order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } else {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                            tags->'opening_hours' as opening_hours,  
                            tags->'cuisine' as cuisine,  
                            tags->'website' as website,  
                            tags->'addr:city' as city,  
                            tags->'addr:street' as street,
                            tags->'internet_access' as internet_access,
                            tags->'outdoor_seating' as outdoor_seating,
                            tags->'internet_access:fee' as internet_access_fee,
                            tags->'description' as description,
                            tags->'smoking' as smoking,
                            tags->'delivery' as delivery,
                            tags->'email' as email,
                            tags->'cuisine:ja' as cuisine_ja,
                            tags->'name:az' as az_name,
                            tags->'addr:postcode' as postcode,
                            tags->'facebook' as facebook,
                            tags->'addr:country' as country,
                            tags->'addr:district' as district,
                            tags->'contact:phone' as contact_phone,
                            tags->'contact:instagram' as instagram,
                            tags->'operator' as operator,
                            tags->'diet:vegetarian' as vegetarian,
                            tags->'name:ar' as ar_name,
                            tags->'townhall:type' as townhall,
                            tags->'designation' as designation,
                            tags->'name:es' as es_name,
                            tags->'capacity' as capacity,
                            tags->'name:tr' as tr_name,
                            tags->'contact:facebook' as contact_facebook,
                            tags->'reservation' as reservation,
                            tags->'instagram' as instagram,
                            tags->'takeaway' as takeaway,
                            tags->'url' as url,
                            tags->'level' as level,
                            tags->'toilets' as toilets,
                            tags->'cuisine_1' as cuisine_1,
                            tags->'cuisine_2' as cuisine_2,
                            tags->'brand' as brand,
                            tags->'contact:email' as contact_email,
                            tags->'brand:wikidata' as wikidata,
                            tags->'brand:wikipedia' as wikipedia,
                            tags->'drive_in' as drive_in,
                            tags->'wheelchair' as wheelchair,
                            tags->'microbrewery' as microbrewery,
                            tags->'opening_hours:covid19' as opening_hours_covid19,
                            tags->'diet:vegan' as diet_vegan,
                            tags->'image' as image,
                            tags->'diet:meat' as meat,
                            tags->'ref:vatin' as vatin,
                            tags->'phone_1' as phone_1,
                            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                            osm_id as osmid,
                            $fieldName as cat_type
                            from  public.planet_osm_point 
                            WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''
                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                            limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        }
                    }
                }
            } else {

                $categoryData = array();

                if ($subcatql) {
                    $fieldName = '';
                    $valuesarr = array();
                    foreach ($subcatql as $row) {
                        $fieldArr = explode("-", $row['name']);
                        $fieldName = $fieldArr[0];
                        $valuesarr[] = $fieldArr[1];
                    }
                    $values = implode("','", $valuesarr);
                    if ($request->cusion) {
                        if ($request->sort == 1) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                        tags->'opening_hours' as opening_hours,  
                        tags->'cuisine' as cuisine,  
                        tags->'website' as website,  
                        tags->'addr:city' as city,  
                        tags->'addr:street' as street,
                        tags->'internet_access' as internet_access,
                        tags->'outdoor_seating' as outdoor_seating,
                        tags->'internet_access:fee' as internet_access_fee,
                        tags->'description' as description,
                        tags->'smoking' as smoking,
                        tags->'delivery' as delivery,
                        tags->'email' as email,
                        tags->'cuisine:ja' as cuisine_ja,
                        tags->'name:az' as az_name,
                        tags->'addr:postcode' as postcode,
                        tags->'facebook' as facebook,
                        tags->'addr:country' as country,
                        tags->'addr:district' as district,
                        tags->'contact:phone' as contact_phone,
                        tags->'contact:instagram' as instagram,
                        tags->'operator' as operator,
                        tags->'diet:vegetarian' as vegetarian,
                        tags->'name:ar' as ar_name,
                        tags->'townhall:type' as townhall,
                        tags->'designation' as designation,
                        tags->'name:es' as es_name,
                        tags->'capacity' as capacity,
                        tags->'name:tr' as tr_name,
                        tags->'contact:facebook' as contact_facebook,
                        tags->'reservation' as reservation,
                        tags->'instagram' as instagram,
                        tags->'takeaway' as takeaway,
                        tags->'url' as url,
                        tags->'level' as level,
                        tags->'toilets' as toilets,
                        tags->'cuisine_1' as cuisine_1,
                        tags->'cuisine_2' as cuisine_2,
                        tags->'brand' as brand,
                        tags->'contact:email' as contact_email,
                        tags->'brand:wikidata' as wikidata,
                        tags->'brand:wikipedia' as wikipedia,
                        tags->'drive_in' as drive_in,
                        tags->'wheelchair' as wheelchair,
                        tags->'microbrewery' as microbrewery,
                        tags->'opening_hours:covid19' as opening_hours_covid19,
                        tags->'diet:vegan' as diet_vegan,
                        tags->'image' as image,
                        tags->'diet:meat' as meat,
                        tags->'ref:vatin' as vatin,
                        tags->'phone_1' as phone_1,
                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                        osm_id as osmid,
                        $fieldName as cat_type
                        from  public.planet_osm_point 
                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and name!=''
                        order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                        limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } elseif ($request->sort == 2) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                        tags->'opening_hours' as opening_hours,  
                        tags->'cuisine' as cuisine,  
                        tags->'website' as website,  
                        tags->'addr:city' as city,  
                        tags->'addr:street' as street,
                        tags->'internet_access' as internet_access,
                        tags->'outdoor_seating' as outdoor_seating,
                        tags->'internet_access:fee' as internet_access_fee,
                        tags->'description' as description,
                        tags->'smoking' as smoking,
                        tags->'delivery' as delivery,
                        tags->'email' as email,
                        tags->'cuisine:ja' as cuisine_ja,
                        tags->'name:az' as az_name,
                        tags->'addr:postcode' as postcode,
                        tags->'facebook' as facebook,
                        tags->'addr:country' as country,
                        tags->'addr:district' as district,
                        tags->'contact:phone' as contact_phone,
                        tags->'contact:instagram' as instagram,
                        tags->'operator' as operator,
                        tags->'diet:vegetarian' as vegetarian,
                        tags->'name:ar' as ar_name,
                        tags->'townhall:type' as townhall,
                        tags->'designation' as designation,
                        tags->'name:es' as es_name,
                        tags->'capacity' as capacity,
                        tags->'name:tr' as tr_name,
                        tags->'contact:facebook' as contact_facebook,
                        tags->'reservation' as reservation,
                        tags->'instagram' as instagram,
                        tags->'takeaway' as takeaway,
                        tags->'url' as url,
                        tags->'level' as level,
                        tags->'toilets' as toilets,
                        tags->'cuisine_1' as cuisine_1,
                        tags->'cuisine_2' as cuisine_2,
                        tags->'brand' as brand,
                        tags->'contact:email' as contact_email,
                        tags->'brand:wikidata' as wikidata,
                        tags->'brand:wikipedia' as wikipedia,
                        tags->'drive_in' as drive_in,
                        tags->'wheelchair' as wheelchair,
                        tags->'microbrewery' as microbrewery,
                        tags->'opening_hours:covid19' as opening_hours_covid19,
                        tags->'diet:vegan' as diet_vegan,
                        tags->'image' as image,
                        tags->'diet:meat' as meat,
                        tags->'ref:vatin' as vatin,
                        tags->'phone_1' as phone_1,
                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                        osm_id as osmid,
                        $fieldName as cat_type
                        from  public.planet_osm_point 
                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and name!=''
                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                        limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } else {


                            $nearby = DB::connection('pgsql')->select("SELECT 
                        tags->'opening_hours' as opening_hours,  
                        tags->'cuisine' as cuisine,  
                        tags->'website' as website,  
                        tags->'addr:city' as city,  
                        tags->'addr:street' as street,
                        tags->'internet_access' as internet_access,
                        tags->'outdoor_seating' as outdoor_seating,
                        tags->'internet_access:fee' as internet_access_fee,
                        tags->'description' as description,
                        tags->'smoking' as smoking,
                        tags->'delivery' as delivery,
                        tags->'email' as email,
                        tags->'cuisine:ja' as cuisine_ja,
                        tags->'name:az' as az_name,
                        tags->'addr:postcode' as postcode,
                        tags->'facebook' as facebook,
                        tags->'addr:country' as country,
                        tags->'addr:district' as district,
                        tags->'contact:phone' as contact_phone,
                        tags->'contact:instagram' as instagram,
                        tags->'operator' as operator,
                        tags->'diet:vegetarian' as vegetarian,
                        tags->'name:ar' as ar_name,
                        tags->'townhall:type' as townhall,
                        tags->'designation' as designation,
                        tags->'name:es' as es_name,
                        tags->'capacity' as capacity,
                        tags->'name:tr' as tr_name,
                        tags->'contact:facebook' as contact_facebook,
                        tags->'reservation' as reservation,
                        tags->'instagram' as instagram,
                        tags->'takeaway' as takeaway,
                        tags->'url' as url,
                        tags->'level' as level,
                        tags->'toilets' as toilets,
                        tags->'cuisine_1' as cuisine_1,
                        tags->'cuisine_2' as cuisine_2,
                        tags->'brand' as brand,
                        tags->'contact:email' as contact_email,
                        tags->'brand:wikidata' as wikidata,
                        tags->'brand:wikipedia' as wikipedia,
                        tags->'drive_in' as drive_in,
                        tags->'wheelchair' as wheelchair,
                        tags->'microbrewery' as microbrewery,
                        tags->'opening_hours:covid19' as opening_hours_covid19,
                        tags->'diet:vegan' as diet_vegan,
                        tags->'image' as image,
                        tags->'diet:meat' as meat,
                        tags->'ref:vatin' as vatin,
                        tags->'phone_1' as phone_1,
                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                        osm_id as osmid,
                        $fieldName as cat_type
                        from  public.planet_osm_point 
                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and name!=''
                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                        limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        }
                    } else {
                        if ($request->sort == 1) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                    tags->'opening_hours' as opening_hours,  
                    tags->'cuisine' as cuisine,  
                    tags->'website' as website,  
                    tags->'addr:city' as city,  
                    tags->'addr:street' as street,
                    tags->'internet_access' as internet_access,
                    tags->'outdoor_seating' as outdoor_seating,
                    tags->'internet_access:fee' as internet_access_fee,
                    tags->'description' as description,
                    tags->'smoking' as smoking,
                    tags->'delivery' as delivery,
                    tags->'email' as email,
                    tags->'cuisine:ja' as cuisine_ja,
                    tags->'name:az' as az_name,
                    tags->'addr:postcode' as postcode,
                    tags->'facebook' as facebook,
                    tags->'addr:country' as country,
                    tags->'addr:district' as district,
                    tags->'contact:phone' as contact_phone,
                    tags->'contact:instagram' as instagram,
                    tags->'operator' as operator,
                    tags->'diet:vegetarian' as vegetarian,
                    tags->'name:ar' as ar_name,
                    tags->'townhall:type' as townhall,
                    tags->'designation' as designation,
                    tags->'name:es' as es_name,
                    tags->'capacity' as capacity,
                    tags->'name:tr' as tr_name,
                    tags->'contact:facebook' as contact_facebook,
                    tags->'reservation' as reservation,
                    tags->'instagram' as instagram,
                    tags->'takeaway' as takeaway,
                    tags->'url' as url,
                    tags->'level' as level,
                    tags->'toilets' as toilets,
                    tags->'cuisine_1' as cuisine_1,
                    tags->'cuisine_2' as cuisine_2,
                    tags->'brand' as brand,
                    tags->'contact:email' as contact_email,
                    tags->'brand:wikidata' as wikidata,
                    tags->'brand:wikipedia' as wikipedia,
                    tags->'drive_in' as drive_in,
                    tags->'wheelchair' as wheelchair,
                    tags->'microbrewery' as microbrewery,
                    tags->'opening_hours:covid19' as opening_hours_covid19,
                    tags->'diet:vegan' as diet_vegan,
                    tags->'image' as image,
                    tags->'diet:meat' as meat,
                    tags->'ref:vatin' as vatin,
                    tags->'phone_1' as phone_1,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid,
                    $fieldName as cat_type
                    from  public.planet_osm_point 
                    WHERE " . $fieldName . " IN ('" . $values . "') and name!=''
                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } elseif ($request->sort == 2) {
                            $nearby = DB::connection('pgsql')->select("SELECT *,
                    tags->'opening_hours' as opening_hours,  
                    tags->'cuisine' as cuisine,  
                    tags->'website' as website,  
                    tags->'addr:city' as city,  
                    tags->'addr:street' as street,
                    tags->'internet_access' as internet_access,
                    tags->'outdoor_seating' as outdoor_seating,
                    tags->'internet_access:fee' as internet_access_fee,
                    tags->'description' as description,
                    tags->'smoking' as smoking,
                    tags->'delivery' as delivery,
                    tags->'email' as email,
                    tags->'cuisine:ja' as cuisine_ja,
                    tags->'name:az' as az_name,
                    tags->'addr:postcode' as postcode,
                    tags->'facebook' as facebook,
                    tags->'addr:country' as country,
                    tags->'addr:district' as district,
                    tags->'contact:phone' as contact_phone,
                    tags->'contact:instagram' as instagram,
                    tags->'operator' as operator,
                    tags->'diet:vegetarian' as vegetarian,
                    tags->'name:ar' as ar_name,
                    tags->'townhall:type' as townhall,
                    tags->'designation' as designation,
                    tags->'name:es' as es_name,
                    tags->'capacity' as capacity,
                    tags->'name:tr' as tr_name,
                    tags->'contact:facebook' as contact_facebook,
                    tags->'reservation' as reservation,
                    tags->'instagram' as instagram,
                    tags->'takeaway' as takeaway,
                    tags->'url' as url,
                    tags->'level' as level,
                    tags->'toilets' as toilets,
                    tags->'cuisine_1' as cuisine_1,
                    tags->'cuisine_2' as cuisine_2,
                    tags->'brand' as brand,
                    tags->'contact:email' as contact_email,
                    tags->'brand:wikidata' as wikidata,
                    tags->'brand:wikipedia' as wikipedia,
                    tags->'drive_in' as drive_in,
                    tags->'wheelchair' as wheelchair,
                    tags->'microbrewery' as microbrewery,
                    tags->'opening_hours:covid19' as opening_hours_covid19,
                    tags->'diet:vegan' as diet_vegan,
                    tags->'image' as image,
                    tags->'diet:meat' as meat,
                    tags->'ref:vatin' as vatin,
                    tags->'phone_1' as phone_1,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid,
                    $fieldName as cat_type
                    from  public.planet_osm_point 
                    WHERE " . $fieldName . " IN ('" . $values . "') and name!=''
                    order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        } else {


                            $nearby = DB::connection('pgsql')->select("SELECT 
                    tags->'opening_hours' as opening_hours,  
                    tags->'cuisine' as cuisine,  
                    tags->'website' as website,  
                    tags->'addr:city' as city,  
                    tags->'addr:street' as street,
                    tags->'internet_access' as internet_access,
                    tags->'outdoor_seating' as outdoor_seating,
                    tags->'internet_access:fee' as internet_access_fee,
                    tags->'description' as description,
                    tags->'smoking' as smoking,
                    tags->'delivery' as delivery,
                    tags->'email' as email,
                    tags->'cuisine:ja' as cuisine_ja,
                    tags->'name:az' as az_name,
                    tags->'addr:postcode' as postcode,
                    tags->'facebook' as facebook,
                    tags->'addr:country' as country,
                    tags->'addr:district' as district,
                    tags->'contact:phone' as contact_phone,
                    tags->'contact:instagram' as instagram,
                    tags->'operator' as operator,
                    tags->'diet:vegetarian' as vegetarian,
                    tags->'name:ar' as ar_name,
                    tags->'townhall:type' as townhall,
                    tags->'designation' as designation,
                    tags->'name:es' as es_name,
                    tags->'capacity' as capacity,
                    tags->'name:tr' as tr_name,
                    tags->'contact:facebook' as contact_facebook,
                    tags->'reservation' as reservation,
                    tags->'instagram' as instagram,
                    tags->'takeaway' as takeaway,
                    tags->'url' as url,
                    tags->'level' as level,
                    tags->'toilets' as toilets,
                    tags->'cuisine_1' as cuisine_1,
                    tags->'cuisine_2' as cuisine_2,
                    tags->'brand' as brand,
                    tags->'contact:email' as contact_email,
                    tags->'brand:wikidata' as wikidata,
                    tags->'brand:wikipedia' as wikipedia,
                    tags->'drive_in' as drive_in,
                    tags->'wheelchair' as wheelchair,
                    tags->'microbrewery' as microbrewery,
                    tags->'opening_hours:covid19' as opening_hours_covid19,
                    tags->'diet:vegan' as diet_vegan,
                    tags->'image' as image,
                    tags->'diet:meat' as meat,
                    tags->'ref:vatin' as vatin,
                    tags->'phone_1' as phone_1,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid,
                    $fieldName as cat_type
                    from  public.planet_osm_point 
                    WHERE " . $fieldName . " IN ('" . $values . "') and name!=''
                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");

                            // $osmid = 123;
                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                            return response()
                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
                        }
                    }
                }
            }
        } else {

            if ($request->sort == 1) {
                $nearby = DB::connection('pgsql')->select("select *,
                tags->'phone' as phone,
                tags->'name:en' as en_Name,  
                tags->'name:hy' as hy_Name,  
                tags->'name:ru' as ru_Name,  
                tags->'opening_hours' as opening_hours,  
                tags->'cuisine' as cuisine,  
                tags->'website' as website,  
                tags->'addr:city' as city,  
                tags->'addr:street' as street,
                tags->'internet_access' as internet_access,
                tags->'outdoor_seating' as outdoor_seating,
                tags->'internet_access:fee' as internet_access_fee,
                tags->'description' as description,
                tags->'smoking' as smoking,
                tags->'delivery' as delivery,
                tags->'email' as email,
                tags->'cuisine:ja' as cuisine_ja,
                tags->'name:az' as az_name,
                tags->'addr:postcode' as postcode,
                tags->'facebook' as facebook,
                tags->'addr:country' as country,
                tags->'addr:district' as district,
                tags->'contact:phone' as contact_phone,
                tags->'contact:instagram' as instagram,
                tags->'operator' as operator,
                tags->'diet:vegetarian' as vegetarian,
                tags->'name:ar' as ar_name,
                tags->'townhall:type' as townhall,
                tags->'designation' as designation,
                tags->'name:es' as es_name,
                tags->'capacity' as capacity,
                tags->'name:tr' as tr_name,
                tags->'contact:facebook' as contact_facebook,
                tags->'reservation' as reservation,
                tags->'instagram' as instagram,
                tags->'takeaway' as takeaway,
                tags->'url' as url,
                tags->'level' as level,
                tags->'toilets' as toilets,
                tags->'cuisine_1' as cuisine_1,
                tags->'cuisine_2' as cuisine_2,
                tags->'brand' as brand,
                tags->'contact:email' as contact_email,
                tags->'brand:wikidata' as wikidata,
                tags->'brand:wikipedia' as wikipedia,
                tags->'drive_in' as drive_in,
                tags->'wheelchair' as wheelchair,
                tags->'microbrewery' as microbrewery,
                tags->'opening_hours:covid19' as opening_hours_covid19,
                tags->'diet:vegan' as diet_vegan,
                tags->'image' as image,
                tags->'diet:meat' as meat,
                tags->'ref:vatin' as vatin,
                tags->'phone_1' as phone_1,
                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                osm_id as osmid
                from  public.planet_osm_point 
                where amenity = 'pub' and name != ''
                order by name ASC, way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                limit 15");
                return response()
                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
            } elseif ($request->sort == 2) {
                $nearby = DB::connection('pgsql')->select("select *,
                tags->'phone' as phone,
                tags->'name:en' as en_Name,  
                tags->'name:hy' as hy_Name,  
                tags->'name:ru' as ru_Name,  
                tags->'opening_hours' as opening_hours,  
                tags->'cuisine' as cuisine,  
                tags->'website' as website,  
                tags->'addr:city' as city,  
                tags->'addr:street' as street,
                tags->'internet_access' as internet_access,
                tags->'outdoor_seating' as outdoor_seating,
                tags->'internet_access:fee' as internet_access_fee,
                tags->'description' as description,
                tags->'smoking' as smoking,
                tags->'delivery' as delivery,
                tags->'email' as email,
                tags->'cuisine:ja' as cuisine_ja,
                tags->'name:az' as az_name,
                tags->'addr:postcode' as postcode,
                tags->'facebook' as facebook,
                tags->'addr:country' as country,
                tags->'addr:district' as district,
                tags->'contact:phone' as contact_phone,
                tags->'contact:instagram' as instagram,
                tags->'operator' as operator,
                tags->'diet:vegetarian' as vegetarian,
                tags->'name:ar' as ar_name,
                tags->'townhall:type' as townhall,
                tags->'designation' as designation,
                tags->'name:es' as es_name,
                tags->'capacity' as capacity,
                tags->'name:tr' as tr_name,
                tags->'contact:facebook' as contact_facebook,
                tags->'reservation' as reservation,
                tags->'instagram' as instagram,
                tags->'takeaway' as takeaway,
                tags->'url' as url,
                tags->'level' as level,
                tags->'toilets' as toilets,
                tags->'cuisine_1' as cuisine_1,
                tags->'cuisine_2' as cuisine_2,
                tags->'brand' as brand,
                tags->'contact:email' as contact_email,
                tags->'brand:wikidata' as wikidata,
                tags->'brand:wikipedia' as wikipedia,
                tags->'drive_in' as drive_in,
                tags->'wheelchair' as wheelchair,
                tags->'microbrewery' as microbrewery,
                tags->'opening_hours:covid19' as opening_hours_covid19,
                tags->'diet:vegan' as diet_vegan,
                tags->'image' as image,
                tags->'diet:meat' as meat,
                tags->'ref:vatin' as vatin,
                tags->'phone_1' as phone_1,
                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                osm_id as osmid
                from  public.planet_osm_point 
                where amenity = 'pub' and name != ''
                order by name DESC, way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                limit 15");
                return response()
                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
            } else {

                $nearby = DB::connection('pgsql')->select("select *,
        tags->'phone' as phone,
        tags->'name:en' as en_Name,  
        tags->'name:hy' as hy_Name,  
        tags->'name:ru' as ru_Name,  
        tags->'opening_hours' as opening_hours,  
        tags->'cuisine' as cuisine,  
        tags->'website' as website,  
        tags->'addr:city' as city,  
        tags->'addr:street' as street,
        tags->'internet_access' as internet_access,
        tags->'outdoor_seating' as outdoor_seating,
        tags->'internet_access:fee' as internet_access_fee,
        tags->'description' as description,
        tags->'smoking' as smoking,
        tags->'delivery' as delivery,
        tags->'email' as email,
        tags->'cuisine:ja' as cuisine_ja,
        tags->'name:az' as az_name,
        tags->'addr:postcode' as postcode,
        tags->'facebook' as facebook,
        tags->'addr:country' as country,
        tags->'addr:district' as district,
        tags->'contact:phone' as contact_phone,
        tags->'contact:instagram' as instagram,
        tags->'operator' as operator,
        tags->'diet:vegetarian' as vegetarian,
        tags->'name:ar' as ar_name,
        tags->'townhall:type' as townhall,
        tags->'designation' as designation,
        tags->'name:es' as es_name,
        tags->'capacity' as capacity,
        tags->'name:tr' as tr_name,
        tags->'contact:facebook' as contact_facebook,
        tags->'reservation' as reservation,
        tags->'instagram' as instagram,
        tags->'takeaway' as takeaway,
        tags->'url' as url,
        tags->'level' as level,
        tags->'toilets' as toilets,
        tags->'cuisine_1' as cuisine_1,
        tags->'cuisine_2' as cuisine_2,
        tags->'brand' as brand,
        tags->'contact:email' as contact_email,
        tags->'brand:wikidata' as wikidata,
        tags->'brand:wikipedia' as wikipedia,
        tags->'drive_in' as drive_in,
        tags->'wheelchair' as wheelchair,
        tags->'microbrewery' as microbrewery,
        tags->'opening_hours:covid19' as opening_hours_covid19,
        tags->'diet:vegan' as diet_vegan,
        tags->'image' as image,
        tags->'diet:meat' as meat,
        tags->'ref:vatin' as vatin,
        tags->'phone_1' as phone_1,
        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
        osm_id as osmid
        from  public.planet_osm_point 
        where amenity = 'pub' and name != ''
        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
        limit 15");
                return response()
                    ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
            }
        }
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    function Category()
    {
        $category = Categories::where('status', 1)->get();
        return  $category;
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function Subcategories(Request $request)
    {
        $subcatql = Subcategories::where('status', 1)->where('cat_id', $request->cat_id)->get();
        return response()
            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $subcatql]);
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function facilities(Request $request)
    {
        $id = $request['cat_id'];
        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
        // $subcatql = "SELECT `name` FROM `sub_categories` WHERE `status` = '1' and cat_id =".$id;
        // $result = $conn->query($subcatql);



        $categoryData = array();
        if ($subcatql) {
            $fieldName = '';
            $valuesarr = array();
            foreach ($subcatql as $row) {
                $fieldArr = explode("-", $row['name']);
                $fieldName = $fieldArr[0];
                $valuesarr[] = $fieldArr[1];
            }
            // while($row = $result->fetch_assoc()) {
            //     $fieldArr = explode("-",$row['name']);
            //     $fieldName = $fieldArr[0];
            //     $valuesarr[] = $fieldArr[1];
            // }
            // if($page_no == ''){$offset = 0;}else{$offset = ($page_no-1)*10;}

            $values = implode("','", $valuesarr);
            //echo "SELECT osm_id,name,ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data FROM planet_osm_point WHERE ".$fieldName." IN ('".$values."') and name!=''";

            $categoryResult = DB::connection('pgsql')->select("SELECT *,tags
                FROM planet_osm_point WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''");
            $metro = DB::connection('pgsql')->select("SELECT name as name,ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data from public.planet_osm_point
              WHERE tags->'station' = 'subway' and name != ''
                limit 25");
        }

        $new = array();
        foreach ($categoryResult as $category) {
            $new[] = $category->tags;
        }

        $ne3_array = array();
        for ($i = 0; $i < count($new); $i++) {
            $ne3_array[$i] = $new[$i];
        }
        $dss = array();
        for ($i = 0; $i < count($ne3_array); $i++) {
            $dss[$i] = explode(',', $ne3_array[$i]);
        }
        $bs = array();
        for ($i = 0; $i < count($dss); $i++) {
            for ($j = 0; $j < count($dss[$i]); $j++) {
                $bs[$i] = substr($dss[$i][$j], 1, 8);
                //  echo count($dss[$i]);
            }
        }
        //   print_r($dss);die;
        $healthy = [
            "nameen", "opening", "addrcit", "namede", "nametr", "namefr", "namezh", "namefa", "namees", "nameit", "nameru", "cuisine", "opening_", "namehy", "addrstr", "descript", "namehe", " addrco", "3-cu mik", "addrci",
            "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "nameaz", "nameka", "namear", "namepl", "addrst", "addrpos", "addrpo", "addrdi", "microbr", "addrco", "designat", "instagr",
            "changin", 'cu mik', 'altname', 'drivet', 'descrip', 'capacity', 'baku', 'minage', 'каль', 'свеж', 'level', 'time', 'oldname', 'namesig', 'building', 'buildin', 'Орех',
            'supervi', 'capacit', 'directi', 'surface', 'feen', 'selfser', 'reasonab', 'nameja', 'maxstay', 'nameko', 'intname', 'notebook', 'toilets', 'seamark', 'name',
            'wikiped', 'addrpla', 'object', 'sari gel', 'designa', 'мага', 'BMW', 'Alfa Rom', 'çilinge', 'oldnam', 'altnam', 'denomina', 'Papik (G', 'sitety', 'в.', '�ара�', 'direkt a',
            'вс.', 'stars', 'attracti', '�илы�', 'waterc', 'intermi', '�ара�', 'Bakı', 'wikimed', 'SaSu', 'Lerik', 'Qeydiyya', 'Мест', 'Avto yuy', 'Инте', 'denomin', 'ruins', 'placeo', 'support', 'ele', 'addrvil',
            'service', 'massage', 'facebook', 'contact'
        ];
        $yummy   = [""];
        $specila = ['"', ':', '-', '_', '=>', '+', '=', '�', '('];
        $dsssss = array();
        $hasdfas = array();
        $fmain = array();
        for ($i = 0; $i < count($bs); $i++) {
            $dsssss[$i] = str_replace($specila, '', $bs[$i]);
            for ($j = 0; $j < count($dsssss); $j++) {
                $hasdfas[$j] = str_replace($healthy, $yummy, $dsssss[$j]);
            }
        }
        $match = [
            "/interne/", '/emergen/', '/brandw/', '/wheelch/', '/internett/', '/operato/', '/takeawa/', '/reserva/', '/dietve/', '/Lökbata/', '/operatorr/', '/wheelchaira/',
            '/public/', '/fueloct/', '/fuelcng/', '/fuelme/', '/brandi/', '/fuellpg/', '/fuellp/', '/fuelcn/', '/bicycle/', '/fueloc/', '/fuelga/', '/fueldie/',
            '/wedding/', '/healthca/', '/dispensi/', '/dispens/', '/cashwi/', '/emergencyc/', '/healthc/', '/healthcareare/', '/dispensinging/', '/motorcy/', '/secondh/',
            '/histori/', '/guesth/', '/castle/', '/roomsb/', '/townhal/', '/bathty/', '/outdoor/', '/internet_accesst/'
        ];
        $add = [
            "internet_access", 'emergency', 'brand', 'wheelchair', 'internet_access', 'operator', 'takeaway', 'reservation', 'diet', 'Lökbatan', 'operator', 'wheelchair', 'public_transport',
            'fuel:octane_92', 'fuel:cng', 'fuel:methane_gas', 'brand', 'fuel:lpg', 'fuel:lpg', 'fuel:cng', 'bicycle_parking', 'fuel:octane_92', 'fuel:gas', 'fuel:diesel',
            'wedding_reception', 'healthcare', 'dispensing', 'dispensing', 'cash_withdrawal', 'emergency', 'healthcare', 'healthcare', 'dispensing', 'motorcycle', 'second_hand',
            'historic', 'guest_house', 'castle_type', 'rooms', 'townhall', 'bath', 'outdoor_seating', 'internet_access'
        ];
        $final = array();
        for ($i = 0; $i < count($hasdfas); $i++) {
            $final[$i] = preg_replace($match, $add, $hasdfas[$i]);
        }

        $bandvalue = array_unique($final);
        $finalone = array();

        foreach ($bandvalue as $band) {
            $finalone[] = $band;
        }
        $cusion = array();
        if ($id == 1) {
            $cusion = $this->cusion($id);
        }
        $finaltwo = array_filter($finalone);
        $fianlvalue = array();
        foreach ($finaltwo as $key => $value) {
            if ($value != "  ") {
                $fianlvalue[] = array("facilities" => $value);
            }
        }


        return response()
            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'cusion' => $cusion, 'Metro' => $metro, 'data' => $fianlvalue]);
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
    }

    function cusion($catid)
    {
        $id = $catid;
        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
        // $subcatql = "SELECT `name` FROM `sub_categories` WHERE `status` = '1' and cat_id =".$id;
        // $result = $conn->query($subcatql);

        $categoryData = array();

        if ($subcatql) {
            $fieldName = '';
            $valuesarr = array();
            foreach ($subcatql as $row) {
                $fieldArr = explode("-", $row['name']);
                $fieldName = $fieldArr[0];
                $valuesarr[] = $fieldArr[1];
            }
            // while($row = $result->fetch_assoc()) {
            //     $fieldArr = explode("-",$row['name']);
            //     $fieldName = $fieldArr[0];
            //     $valuesarr[] = $fieldArr[1];
            // }
            // if($page_no == ''){$offset = 0;}else{$offset = ($page_no-1)*10;}

            $values = implode("','", $valuesarr);
            //echo "SELECT osm_id,name,ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data FROM planet_osm_point WHERE ".$fieldName." IN ('".$values."') and name!=''";

            $categoryResult = DB::connection('pgsql')->select("SELECT tags->'cuisine' as cuisine
                FROM planet_osm_point WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''");
        }

        $new = array();
        foreach ($categoryResult as $category) {
            $new[] = $category->cuisine;
        }

        $ne3_array = array();
        for ($i = 0; $i < count($new); $i++) {
            $ne3_array[$i] = $new[$i];
        }
        $dss = array();
        for ($i = 0; $i < count($ne3_array); $i++) {
            $dss[$i] = explode(';', $ne3_array[$i]);
        }
        // print_r($dss);die;

        $NASDN = array();
        for ($i = 0; $i < count($dss); $i++) {
            for ($j = 0; $j < count($dss[$i]); $j++) {
                $NASDN[$i] = explode(',', $dss[$i][$j]);
                //  echo count($dss[$i]);
            }
            // $NASDN[$i] = explode(',', $dss[$i]);
        }

        $bs = array();
        for ($i = 0; $i < count($NASDN); $i++) {
            for ($j = 0; $j < count($NASDN[$i]); $j++) {
                $bs[$i] = substr($NASDN[$i][$j], 0);
                //  echo count($dss[$i]);
            }
        }
        // $specila = ['"',':','-','_','=>','+','=','�','('];
        //     $dsssss = array();  
        // $hasdfas = array();
        // $fmain = array();
        //     for($i = 0; $i < count($bs); $i++){
        //         $dsssss[$i] = explode(',', $bs[$i]);
        //     } 
        $bandvalue = array_unique($bs);
        //  print_r($bandvalue);die;
        $healthy = [
            "burger", "chicken", "barbecue", "sandwich", "coffeeshop", "kebab", "tea", "hotdog", "pancake", "icecream", "nameru", "WeddingPalace", "grill", "fish", "friture", "steakhouse", "cake", "beefbowl", "sushi",
            "deli", "2", "pasta", "sausage", "Steak", "meat", "coffee", "hookahandtea", "hookah", "noodles", "finedining", "beer", 'Sk', 'sk', 'and', 'house', 'lao'
        ];
        $yummy   = [""];
        $specila = ['"', ':', '-', '_', '=>', '+', '=', '�', '('];
        $dsssss = array();
        $hasdfas = array();
        $fmain = array();
        for ($i = 0; $i < count($bs); $i++) {
            $dsssss[$i] = str_replace($specila, '', $bs[$i]);
            for ($j = 0; $j < count($dsssss); $j++) {
                $hasdfas[$j] = str_replace($healthy, $yummy, $dsssss[$j]);
            }
        }
        $match = ["/italianpizza/"];
        $add = ["italian"];
        $final = array();
        for ($i = 0; $i < count($hasdfas); $i++) {
            $final[$i] = preg_replace($match, $add, $hasdfas[$i]);
        }

        $bandvalue = array_unique($final);
        // print_r($bandvalue);die;
        $finalone = array();

        foreach ($bandvalue as $band) {
            if ($band != "") {
                $finalone[] = array('cusion' => $band);
            }
        }
        return $finalone;
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    // public function simplefileter(Request $request)
    // {
    //     if ($request->cat_id) {
    //         $id = $request->cat_id;
    //         $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
    //         if ($request->subcatid) {
    //             if ($request->facilities) {
    //                 $subcatid = $request->subcatid;
    //                 $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
    //                 $categoryData = array();
    //                 if ($subcatql) {
    //                     $fieldName = '';
    //                     $valuesarr = array();
    //                     foreach ($subcatql as $row) {
    //                         if ($row['id'] == $subcatid) {
    //                             $fieldArr = explode("-", $row['name']);
    //                             $fieldName = $fieldArr[0];
    //                             $valuesarr[] = $fieldArr[1];
    //                         }
    //                     }
    //                     $values = implode("','", $valuesarr);
    //                     $filter = $request->facilities;
    //                     if ($request->cusion) {

    //                         if ($request->hours) {
    //                             if ($request->hours == '24/7') {
    //                                 if ($request->sort == 1) {
    //                                     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                                 ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                                 osm_id as osmid,
    //                                 $fieldName as cat_type
    //                                 from  public.planet_osm_point 
    //                                 WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                                 order by name ASC");

    //                                     // $osmid = 123;
    //                                     // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                                     // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                                     return response()
    //                                         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                                 } else if ($request->sort == 2) {
    //                                     $nearby = DB::connection('pgsql')->select("SELECT name as name,
    //                                 ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                                 osm_id as osmid,
    //                                 $fieldName as cat_type
    //                                 from  public.planet_osm_point 
    //                                 WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                                 order by name DESC");

    //                                     // $osmid = 123;
    //                                     // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                                     // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                                     return response()
    //                                         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                                 } else if ($request->sort == 3) {
    //                                     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                                 ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                                 osm_id as osmid,
    //                                 $fieldName as cat_type
    //                                 from  public.planet_osm_point 
    //                                 WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                                 order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                                  limit 15");

    //                                     // $osmid = 123;
    //                                     // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                                     // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                                     return response()
    //                                         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                                 } else {
    //                                     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                                 ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                                 osm_id as osmid,
    //                                 $fieldName as cat_type
    //                                 from  public.planet_osm_point 
    //                                 WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!=''  and name != ''");

    //                                     // $osmid = 123;
    //                                     // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                                     // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                                     return response()
    //                                         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                                 }
    //                             }
    //                         }


    //                         if ($request->sort == 1) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by name ASC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 2) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by name DESC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 3) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                          limit 15");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and tags->'cuisine' ='$request->cusion' and tags!=''  and name != ''");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         }
    //                     } else {
    //                         if ($request->sort == 1) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and name != ''
    //                         order by name ASC");
    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 2) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !=''  and name != ''
    //                         order by name DESC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 3) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !=''  and name != ''
    //                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                         limit 15");
    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'" . $filter . "' !='' and name != ''");
    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         }
    //                     }
    //                 }
    //             } else {
    //                 $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
    //                 $subcatid = $request->subcatid;
    //                 $categoryData = array();
    //                 if ($subcatql) {
    //                     $fieldName = '';
    //                     $valuesarr = array();
    //                     foreach ($subcatql as $row) {
    //                         if ($row['id'] == $subcatid) {
    //                             $fieldArr = explode("-", $row['name']);
    //                             $fieldName = $fieldArr[0];
    //                             $valuesarr[] = $fieldArr[1];
    //                         }
    //                     }
    //                     $values = implode("','", $valuesarr);

    //                     if ($request->cusion) {
    //                         if ($request->sort == 1) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by name ASC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 2) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by name DESC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 3) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and tags!='' and name != ''
    //                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                          limit 15");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' ='$request->cusion' and tags!=''  and name != ''");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         }
    //                     } else {
    //                         if ($request->sort == 1) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags!='' and name != ''
    //                         order by name ASC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 2) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags!='' and name != ''
    //                         order by name DESC");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 3) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags!='' and name != ''
    //                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                          limit 15");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and tags!=''  and name != ''");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         }
    //                     }
    //                 }
    //             }
    //         } else {
    //             $search = $request->search;
    //             $categoryData = array();

    //             if ($subcatql) {
    //                 $fieldName = '';
    //                 $valuesarr = array();
    //                 foreach ($subcatql as $row) {
    //                     $fieldArr = explode("-", $row['name']);
    //                     $fieldName = $fieldArr[0];
    //                     $valuesarr[] = $fieldArr[1];
    //                 }
    //                 $values = implode("','", $valuesarr);



    //                 if ($request->cusion) {
    //                     if ($request->sort == 1) {
    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                             osm_id as osmid,
    //                             $fieldName as cat_type
    //                             from  public.planet_osm_point 
    //                             WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
    //                             order by name ASC
    //                             limit 15");
    //                     } else if ($request->sort == 2) {
    //                         $nearby = DB::connection('pgsql')->select("SELECT name as name,
    //                             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                             osm_id as osmid,
    //                             $fieldName as cat_type
    //                             from  public.planet_osm_point 
    //                             WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
    //                             order by name DESC
    //                             limit 15");
    //                     } else if ($request->sort == 3) {

    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                             osm_id as osmid,
    //                             $fieldName as cat_type
    //                             from  public.planet_osm_point 
    //                             WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
    //                             order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                             limit 15");
    //                     } else {

    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                             osm_id as osmid,
    //                             $fieldName as cat_type
    //                             from  public.planet_osm_point 
    //                             WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' ");

    //                         // $osmid = 123;
    //                         // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                         // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                         return response()
    //                             ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                     }
    //                 } else {
    //                     if ($request->open_everytime) {

    //                         if ($request->sort == 1) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
    //                         order by name ASC
    //                         limit 15");
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 2) {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
    //                         order by name DESC
    //                         limit 15");
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else if ($request->sort == 3) {

    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' ");

    //                             // $osmid = 123;
    //                             // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                             // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         } else {
    //                             $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         }
    //                     } elseif ($request->open_now) {
    //                         // print_r($request->open_now);die;
    //                         $opennow = date("l:h",$request->open_now);
    //                         $day = explode(':', $opennow);
    //                         $weekday = array();
    //                         for ($i=1; $i <count($day) ; $i++) { 
    //                                 $weekday[] = array(substr($day[0],0,2).' '.$day[1]);
    //                         }

    //                         $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
    //                          order by name ASC");
    //                         $EXPLODEHOURS = array();
    //                         foreach ($nearby as $key) {
    //                            $EXPLODEHOURS[] = explode(' ',$key->open_now);
    //                         }
    //                         $days = array(
    //                             'mo' => 1,
    //                             'tu' => 2,
    //                             'we' => 3,
    //                             'th' => 4,
    //                             'fr' => 5,
    //                             'sa' => 6,
    //                             'su' => 7,
    //                         );
    //                         $tempdays = array();
    //                         for($i=0;$i<count($EXPLODEHOURS); $i++){

    //                         }

    //                             return response()
    //                                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $EXPLODEHOURS]);
    //                         // if ($request->sort == 1) {
    //                         //     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         // ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         // osm_id as osmid,
    //                         // $fieldName as cat_type
    //                         // from  public.planet_osm_point 
    //                         // WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
    //                         // order by name ASC
    //                         // limit 15");
    //                         //     return response()
    //                         //         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         // } else if ($request->sort == 2) {
    //                         //     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         // ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         // osm_id as osmid,
    //                         // $fieldName as cat_type
    //                         // from  public.planet_osm_point 
    //                         // WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
    //                         // order by name DESC
    //                         // limit 15");
    //                         //     return response()
    //                         //         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         // } else if ($request->sort == 3) {

    //                         //     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         // ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         // osm_id as osmid,
    //                         // $fieldName as cat_type
    //                         // from  public.planet_osm_point 
    //                         // WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' ");

    //                         //     // $osmid = 123;
    //                         //     // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                         //     // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                         //     return response()
    //                         //         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         // } else {
    //                         //     $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         // ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         // osm_id as osmid,
    //                         // $fieldName as cat_type
    //                         // from  public.planet_osm_point 
    //                         // WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
    //                         //     return response()
    //                         //         ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                         // }
    //                     }


    //                     if ($request->sort == 1) {
    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
    //                         order by name ASC
    //                         limit 15");
    //                         return response()
    //                             ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                     } else if ($request->sort == 2) {
    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
    //                         order by name DESC
    //                         limit 15");
    //                         return response()
    //                             ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                     } else if ($request->sort == 3) {

    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

    //                         // $osmid = 123;
    //                         // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
    //                         // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
    //                         return response()
    //                             ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                     } else {
    //                         $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid,
    //                         $fieldName as cat_type
    //                         from  public.planet_osm_point 
    //                         WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");
    //                         return response()
    //                             ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //                     }
    //                 }
    //             }
    //         }
    //     } else {
    //         if ($request->sort == 1) {
    //             $nearby = DB::connection('pgsql')->select("select *,name as name,
    //             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //             osm_id as osmid
    //             from  public.planet_osm_point 
    //             where amenity = 'pub' and name != ''
    //             order by name ASC
    //             limit 15");
    //             return response()
    //                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //         } else if ($request->sort == 2) {
    //             $nearby = DB::connection('pgsql')->select("select *,name as name,
    //             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //             osm_id as osmid
    //             from  public.planet_osm_point 
    //             where amenity = 'pub' and name != ''
    //             order by name DESC
    //             limit 15");
    //             return response()
    //                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //         } else if ($request->sort == 3) {
    //             $nearby = DB::connection('pgsql')->select("select *,name as name,
    //             ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //             osm_id as osmid
    //             from  public.planet_osm_point 
    //             where amenity = 'pub' and name != ''
    //             order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //             limit 15");
    //             return response()
    //                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //         } else {

    //             $nearby = DB::connection('pgsql')->select("select *,name as name,
    //                         ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
    //                         osm_id as osmid
    //                         from  public.planet_osm_point 
    //                         where amenity = 'pub' and name != ''
    //                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
    //                         limit 15");
    //             return response()
    //                 ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $nearby]);
    //         }
    //     }
    // }



    public function nearbysearch(Request $request)
    {
        $category = $this->Category();
        if ($request->search) {
            $search = $request->search;
            if ($request->cat_id) {
                $id = $request->cat_id;
                $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                if ($request->subcatid) {

                    /////////////////// facilities start /////////////////////////
                    if ($request->facilities) {
                        $subcatid = $request->subcatid;
                        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                        $categoryData = array();
                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);
                            $filter = $request->facilities;


                            ////// cusion ///////////

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                    ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by name ASC
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                            ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                            ////////// facilities end //////////////////////////////////////////////////////////////////


                        }
                    } else {
                        $search = $request->search;
                        $categoryData = array();

                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $request->subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    $search = $request->search;
                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            $fieldArr = explode("-", $row['name']);
                            $fieldName = $fieldArr[0];
                            $valuesarr[] = $fieldArr[1];
                        }
                        $values = implode("','", $valuesarr);

                        if ($request->metro) {

                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and  name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        } else {
                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                ");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                    }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                if ($request->sort == 1) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name LIKE '%$search%'
                    order by name ASC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 2) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name LIKE '%$search%'
                    order by name DESC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 3) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name LIKE '%$search%'
                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else {

                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid
                                from  public.planet_osm_point 
                                where name LIKE '%$search%'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                }
            }
        } else {
            if ($request->cat_id) {
                $id = $request->cat_id;
                $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                if ($request->subcatid) {

                    /////////////////// facilities start /////////////////////////
                    if ($request->facilities) {
                        $subcatid = $request->subcatid;
                        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                        $categoryData = array();
                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);
                            $filter = $request->facilities;


                            ////// cusion ///////////

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != ''
                                           order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                      ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != ''
                                           order by name ASC
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();

                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                            ////////// facilities end //////////////////////////////////////////////////////////////////


                        }
                    } else {
                        $search = $request->search;
                        $categoryData = array();

                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $request->subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                   ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    $search = $request->search;
                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            $fieldArr = explode("-", $row['name']);
                            $fieldName = $fieldArr[0];
                            $valuesarr[] = $fieldArr[1];
                        }
                        $values = implode("','", $valuesarr);

                        if ($request->metro) {

                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                    }
                                    return response()
                                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        } else {
                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                ");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                    }
                                    return response()
                                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                if ($request->sort == 1) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name != ''
                    order by name ASC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 2) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name != ''
                    order by name DESC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 3) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where name != ''
                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else {

                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid
                                from  public.planet_osm_point 
                                where name != ''
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                }
            }
        }
    }



    public function simplesearch(Request $request)
    {
        $category = $this->Category();
        if ($request->search) {
            $search = $request->search;
            if ($request->cat_id) {
                $id = $request->cat_id;
                $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                if ($request->subcatid) {

                    /////////////////// facilities start /////////////////////////
                    if ($request->facilities) {
                        $subcatid = $request->subcatid;
                        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                        $categoryData = array();
                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);
                            $filter = $request->facilities;


                            ////// cusion ///////////

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                     ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by name ASC
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                         ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                       
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                            ////////// facilities end //////////////////////////////////////////////////////////////////


                        }
                    } else {
                        $search = $request->search;
                        $categoryData = array();

                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $request->subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    $search = $request->search;
                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            $fieldArr = explode("-", $row['name']);
                            $fieldName = $fieldArr[0];
                            $valuesarr[] = $fieldArr[1];
                        }
                        $values = implode("','", $valuesarr);

                        if ($request->metro) {

                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and  name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        } else {
                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                if ($request->sort == 1) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name LIKE '%$search%'
                    order by name ASC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 2) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name LIKE '%$search%'
                    order by name DESC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 3) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name LIKE '%$search%'
                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else {

                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid
                                from  public.planet_osm_point 
                                where amenity = 'pub' and name LIKE '%$search%'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                }
            }
        } else {
            if ($request->cat_id) {
                $id = $request->cat_id;
                $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                if ($request->subcatid) {

                    /////////////////// facilities start /////////////////////////
                    if ($request->facilities) {
                        $subcatid = $request->subcatid;
                        $subcatql = Subcategories::where('status', 1)->where('cat_id', $id)->get();
                        $categoryData = array();
                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);
                            $filter = $request->facilities;


                            ////// cusion ///////////

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != ''
                                           order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7' 
                                       and tags->'cuisine' = '$request->cusion'
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       and tags->'cuisine' = '$request->cusion'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                       and tags->'cuisine' = '$request->cusion' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                           and tags->'cuisine' = '$request->cusion'
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != ''
                                           and tags->'cuisine' = '$request->cusion' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != ''
                                           order by name ASC
                                           limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by name DESC
                                           limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                           order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                           limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name != '' 
                                            ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();

                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                       order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                        order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                            ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                           ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                           osm_id as osmid,
                                           $fieldName as cat_type
                                           from  public.planet_osm_point 
                                           WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                            order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name ASC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                       order by name DESC
                                       limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                       ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                       osm_id as osmid,
                                       $fieldName as cat_type
                                       from  public.planet_osm_point 
                                       WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                            ////////// facilities end //////////////////////////////////////////////////////////////////


                        }
                    } else {
                        $search = $request->search;
                        $categoryData = array();

                        if ($subcatql) {
                            $fieldName = '';
                            $valuesarr = array();
                            foreach ($subcatql as $row) {
                                if ($row['id'] == $request->subcatid) {
                                    $fieldArr = explode("-", $row['name']);
                                    $fieldName = $fieldArr[0];
                                    $valuesarr[] = $fieldArr[1];
                                }
                            }
                            $values = implode("','", $valuesarr);

                            if ($request->metro) {

                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            } else {
                                if ($request->cusion) {

                                    if ($request->open_everytime) {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                    and tags->'cuisine' = '$request->cusion'
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                    and tags->'cuisine' = '$request->cusion'
                                    ");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                        and tags->'cuisine' = '$request->cusion'
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                        and tags->'cuisine' = '$request->cusion' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                        order by name ASC
                                        limit 15");
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by name DESC
                                        limit 15");
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                        limit 15");
                                        } else {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                        ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } else {
                                    if ($request->open_everytime) {

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    } elseif ($request->open_now) {
                                        $opennow = date("N-H:i", $request->open_now);
                                        $day = explode('-', $opennow);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } elseif ($request->customize) {
                                        // $opennow = date("N-H:i",$request->open_now);
                                        $day = explode('-', $request->customize);
                                        $weekday = array();
                                        for ($i = 1; $i < count($day); $i++) {
                                            $weekday[] = array(
                                                'day' => $day[0],
                                                'hours' => $day[1]

                                            );
                                        };
                                        $days = array(
                                            'mo' => 1,
                                            'tu' => 2,
                                            'we' => 3,
                                            'th' => 4,
                                            'fr' => 5,
                                            'sa' => 6,
                                            'su' => 7,
                                        );

                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name asc");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/ 7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name DESC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else if ($request->sort == 3) {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                         ");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                        ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                        osm_id as osmid,
                                        $fieldName as cat_type
                                        from  public.planet_osm_point 
                                        WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                         order by name ASC");
                                            $finaldayes = array();
                                            foreach ($nearby as $key) {
                                                $dayTime = explode(' ', $key->open_now);
                                                if (count($dayTime) >= 2) {
                                                    $day = explode('-', $dayTime[0]);
                                                    $startday = strtolower($day[0]);
                                                    $endday = strtolower($day[1]);
                                                    $time = explode('-', $dayTime[1]);
                                                    $starttime = $time[0];
                                                    $endtime = $time[1];
                                                    if ($endtime == '00:00') {
                                                        $endtime = '24:00';
                                                    }
                                                    if ($startday == 'may' || $endday == 'sep') {
                                                        $startday = 'mo';
                                                        $endday = 'su';
                                                    }
                                                    if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                        if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                            $finaldayes[] = $key;
                                                        }
                                                    }
                                                }
                                                if ($key->open_now == '24/7') {
                                                    $finaldayes[] = $key;
                                                }
                                            }
                                            return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                        }
                                    } else {
                                        if ($request->sort == 1) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name ASC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 2) {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                    order by name DESC
                                    limit 15");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else if ($request->sort == 3) {

                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                            // $osmid = 123;
                                            // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                            // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        } else {
                                            $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                            return response()
                                                ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                        }
                                    }
                                }
                            }
                        }
                    }
                } else {
                    $search = $request->search;
                    $categoryData = array();

                    if ($subcatql) {
                        $fieldName = '';
                        $valuesarr = array();
                        foreach ($subcatql as $row) {
                            $fieldArr = explode("-", $row['name']);
                            $fieldName = $fieldArr[0];
                            $valuesarr[] = $fieldArr[1];
                        }
                        $values = implode("','", $valuesarr);

                        if ($request->metro) {

                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                    }
                                    return response()
                                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        } else {
                            if ($request->cusion) {

                                if ($request->open_everytime) {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7' 
                                and tags->'cuisine' = '$request->cusion'
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' = '24/7'
                                and tags->'cuisine' = '$request->cusion'
                               ");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                and tags->'cuisine' = '$request->cusion' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != '' 
                                    and tags->'cuisine' = '$request->cusion'
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name LIKE '%$search%' and tags->'opening_hours' != ''
                                    and tags->'cuisine' = '$request->cusion' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%'
                                    order by name ASC
                                    limit 15");
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by name DESC
                                    limit 15");
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                    limit 15");
                                    } else {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and tags->'cuisine' = '$request->cusion' and name LIKE '%$search%' 
                                    order by way <-> ST_Transform(ST_SetSRID(ST_Point($request->metro), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                    }
                                    return response()
                                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                }
                            } else {
                                if ($request->open_everytime) {

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != ''and tags->'opening_hours' = '24/7' 
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' = '24/7'");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                } elseif ($request->open_now) {
                                    $opennow = date("N-H:i", $request->open_now);
                                    $day = explode('-', $opennow);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC,way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } elseif ($request->customize) {
                                    // $opennow = date("N-H:i",$request->open_now);
                                    $day = explode('-', $request->customize);
                                    $weekday = array();
                                    for ($i = 1; $i < count($day); $i++) {
                                        $weekday[] = array(
                                            'day' => $day[0],
                                            'hours' => $day[1]

                                        );
                                    };
                                    $days = array(
                                        'mo' => 1,
                                        'tu' => 2,
                                        'we' => 3,
                                        'th' => 4,
                                        'fr' => 5,
                                        'sa' => 6,
                                        'su' => 7,
                                    );

                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name asc");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/ 7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                 order by name DESC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else if ($request->sort == 3) {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                     ");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT tags->'opening_hours' AS open_now,name as name,
                                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                    osm_id as osmid,
                                    $fieldName as cat_type
                                    from  public.planet_osm_point 
                                    WHERE " . $fieldName . " IN ('" . $values . "') and name != '' and tags->'opening_hours' != '' 
                                     order by name ASC");
                                        $finaldayes = array();
                                        foreach ($nearby as $key) {
                                            $dayTime = explode(' ', $key->open_now);
                                            if (count($dayTime) >= 2) {
                                                $day = explode('-', $dayTime[0]);
                                                $startday = strtolower($day[0]);
                                                $endday = strtolower($day[1]);
                                                $time = explode('-', $dayTime[1]);
                                                $starttime = $time[0];
                                                $endtime = $time[1];
                                                if ($endtime == '00:00') {
                                                    $endtime = '24:00';
                                                }
                                                if ($startday == 'may' || $endday == 'sep') {
                                                    $startday = 'mo';
                                                    $endday = 'su';
                                                }
                                                if ($weekday[0]['day'] >= $days[$startday] && $weekday[0]['day'] <= $days[$endday]) {
                                                    if ($weekday[0]['hours'] >= $starttime && $weekday[0]['hours'] <= $endtime) {
                                                        $finaldayes[] = $key;
                                                    }
                                                }
                                            }
                                            if ($key->open_now == '24/7') {
                                                $finaldayes[] = $key;
                                            }
                                        }
                                        return response()->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $finaldayes]);
                                    }
                                } else {
                                    if ($request->sort == 1) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name ASC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 2) {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' 
                                order by name DESC
                                limit 15");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else if ($request->sort == 3) {

                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' ");

                                        // $osmid = 123;
                                        // $avg = DB::table('reviews_rating')->where('osm_id', $osmid)->avg('ratings');
                                        // $count = DB::table('reviews_rating')->where('osm_id', $osmid)->count();
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    } else {
                                        $nearby = DB::connection('pgsql')->select("SELECT *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid,
                                $fieldName as cat_type
                                from  public.planet_osm_point 
                                WHERE " . $fieldName . " IN ('" . $values . "') and name != '' limit 20");
                                        return response()
                                            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                if ($request->sort == 1) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name != ''
                    order by name ASC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 2) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name != ''
                    order by name DESC
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else if ($request->sort == 3) {
                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                    ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                    osm_id as osmid
                    from  public.planet_osm_point 
                    where amenity = 'pub' and name != ''
                    order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                    limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                } else {

                    $nearby = DB::connection('pgsql')->select("select *,name as name,
                                ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
                                osm_id as osmid
                                from  public.planet_osm_point 
                                where amenity = 'pub' and name != ''
                                order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
                                limit 15");
                    return response()
                        ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'Category' => $category, 'data' => $nearby]);
                }
            }
        }
    }


    function metrostations()
    {
        $metroResult = DB::connection('pgsql')->select("select name as name,ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data from public.planet_osm_point
                         where tags->'station' = 'subway' and name != ''
                         limit 25");
        return response()
            ->json(['data' => $metroResult]);
    }



    public function Search(Request $request)
    {
        //  print_r($this->metrostations());die;

        $search = $request->search;
        $nearby = DB::connection('pgsql')->select("select  name as name,
            tags->'name:en' as en_Name,  
            tags->'name:hy' as hy_Name,  
            tags->'name:ru' as ru_Name,  
            tags->'name:az' as az_name,
            tags->'name:ar' as ar_name,
            tags->'name:es' as es_name,
            tags->'name:tr' as tr_name,
            ST_AsGeoJSON(ST_Transform(way,4326)) as geoJSON_data,
            osm_id as osmid
            from  public.planet_osm_point 
            where name LIKE '%$search%' and name != ''
            order by way <-> ST_Transform(ST_SetSRID(ST_Point(49.84496533870698,40.37147089250506), 4326), 3857)
            limit 15");

        $geojson = array();
        $coordinates = array();
        for ($i = 0; $i < count($nearby); $i++) {
            $geojson[] = json_decode($nearby[$i]->geojson_data);
            for ($x = 0; $x < count($geojson); $x++) {
                $coordinates[] = array(
                    'name' => $nearby[$i]->name,
                    'coordinates' =>  $geojson[$x]->coordinates
                );
            }
        }

        return response()
            ->json(['statusCode' => 1, 'statusMessage' => 'Successfully', 'data' => $coordinates]);
    }
}
